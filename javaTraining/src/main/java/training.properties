

******************************************Eceptions******************************************************

checked exception :-  those dealing with outside java resources , Database connection , i/o, SQL Exception ,ClassNOtFoundException
unchecked exception - deals with java resources  , NullpointException , Airthmetic , ArrayOutOfBoundException

ARM- Automatic resource management /Try with resources) 

interface  :-  Autoclosable/Close() 

Questions:- 

Throw and Throws used
Why throw keyword is needed
Where to use Try Catch and when , Where to use Throw & Throws 

Object is super class in Java . 

Object class methods in Java 

1. toString()
2. equals()
3. hashCode()
4. 


1. Diff between Interface and Abstraction
2. Interface class in Selenium
3. Abstraction class /method in Selenium



Interface :- 

1. All interface class methods are abstract in nature
2. implement keyword use while implementing the child class
3. Can not create object of interface class
4. Interface class can not be static 
5. Child class of Interface class methods are all overriden methods 



Difference between Comparable and Comparator
Comparable and Comparator both are interfaces and can be used to sort collection elements.

However, there are many differences between Comparable and Comparator interfaces that are given below.

Comparable	Comparator
1) Comparable provides a single sorting sequence. In other words, we can sort the collection on the basis of a single element such as id, name, and price.	The Comparator provides multiple sorting sequences. In other words, we can sort the collection on the basis of multiple elements such as id, name, and price etc.
2) Comparable affects the original class, i.e., the actual class is modified.	Comparator doesn't affect the original class, i.e., the actual class is not modified.
3) Comparable provides compareTo() method to sort elements.	Comparator provides compare() method to sort elements.
4) Comparable is present in java.lang package.	A Comparator is present in the java.util package.
5) We can sort the list elements of Comparable type by Collections.sort(List) method.	We can sort the list elements of Comparator type by Collections.sort(List, Comparator) method.